# ==========================
# ===  General settings  ===
# ==========================

set -g default-terminal "screen-256color"
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-s

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on


# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Select pane and windows
bind -r C-[ previous-window
bind -r C-] next-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
bind \ if '[ #{pane_index} -eq 1 ]' \
     'swap-pane -s "!"' \
     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# Kill pane/window/session shortcuts
bind d kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# ==================================================
# === Window monitoring for activity and silence ===
# ==================================================
bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# Activity bell and whistles
set -g visual-activity on

# TODO: Does not work as well, check on newer versions
# set -g visual-silence on

# BUG: bell-action other ignored · Issue #1027 · tmux/tmux · GitHub - https://github.com/tmux/tmux/issues/1027
set -g visual-bell off
# setw -g bell-action other

# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
set -g @copy_use_osc52_fallback on

# Prefer vi style key table
setw -g mode-keys vi

bind p paste-buffer
bind C-p choose-buffer
set -g status on
set -g status-interval 1
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

# =====================================
# ===           Theme               ===
# =====================================

parrot_acva='colour44' # 87
parrot_green='colour48'
parrot_fg='colour87' #153
parrot_black='black'
yellow='colour11'
red='colour1'
separater_color='colour153'
color_level_ok='colour153'
color_level_warn='colour226'
color_level_stress='colour196'

set -g mode-style "fg=$parrot_black,bg=$parrot_fg"
# command line style
set -g message-style "fg=$parrot_acva,bg=$parrot_black"
# status line style
set -g status-style "fg=$parrot_fg,bg=$parrot_black"

separator_powerline_left=""
separator_powerline_right="" #

setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$parrot_black,bg=$parrot_acva"
setw -g window-status-current-format "#[fg=$parrot_black,bg=$parrot_acva]$separator_powerline_right #I:#W# #[default]#[fg=$parrot_acva,bg=$parrot_black]$separator_powerline_right#[default]"

set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100
setw -g window-status-activity-style "fg=$parrot_acva"
setw -g pane-active-border-style "fg=$parrot_acva"

separ="#[fg="$parrot_acva"]$separator_powerline_left"
d='#[default]'

wg_session="#[fg=$parrot_acva] #S $d"
wg_battery="#{battery_status_fg}#[fg=$parrot_acva]$d  #[fg=$parrot_fg]#{battery_percentage}$d"
wg_date="#[fg=$parrot_fg]%h月%d日$d #[fg=$parrot_acva]  $d%H:%M$d"
# wg_user_host="#[fg=$parrot_acva]#(whoami)$d#[fg=$yellow]@$d#[fg=$parrot_green]#(hostname -f)$d"
wg_user_host="#[fg=$red]root$d#[fg=$yellow]@$d#[fg=$parrot_green]MacbookPro$d"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')$d"

# StatusLine
set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $separ   $d#{sysstat_cpu} $separ   $d#{sysstat_mem} $separ  $d$wg_user_host $separ  $d$wg_date $separ $wg_battery $separ #{online_status} $d"
#
# online and offline icon for tmux-online-status
set -g @online_icon "#[fg=$parrot_acva] $d"
set -g @offline_icon "#[fg=$color_level_stress]$d"
# ●

# MEM and CPU
# set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}(#{mem.used})#[default]'
# set -g @sysstat_cpu_view_tmpl 'CPU:#[fg=#{cpu.color}]#{cpu.pused}#[default]'

set -g @sysstat_mem_view_tmpl 'MEM:#[fg=$parrot_fg]#{mem.pused}(#{mem.used})#[default]'
set -g @sysstat_cpu_view_tmpl 'CPU:#[fg=$parrot_fg]#{cpu.pused}#[default]'

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$color_level_ok"
set -g @sysstat_cpu_color_medium "$color_level_warn"
set -g @sysstat_cpu_color_stress "$color_level_stress"

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

set -g @sysstat_swap_color_low "$color_level_ok"
set -g @sysstat_swap_color_medium "$color_level_warn"
set -g @sysstat_swap_color_stress "$color_level_stress"


# Configure tmux-battery widget colors
set -g @batt_color_full_charge "#[fg=$color_level_ok]"
set -g @batt_color_high_charge "#[fg=$color_level_ok]"
set -g @batt_color_medium_charge "#[fg=$color_level_warn]"
set -g @batt_color_low_charge "#[fg=$color_level_stress]"

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "black"
set -g @prefix_highlight_bg "$parrot_acva"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$parrot_acva"
# ============================
# ===       Plugins        ===
# ============================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# Plugin properties
set -g @sidebar-tree 't'
set -g @sidebar-tree-focus 'T'
set -g @sidebar-tree-command 'tree -C'

run '~/.tmux/plugins/tpm/tpm'
